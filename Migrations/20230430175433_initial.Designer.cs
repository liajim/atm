// <auto-generated />
using System;
using AtmCoroBain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtmCoroBain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230430175433_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AtmCoroBain.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 2
                        });
                });

            modelBuilder.Entity("AtmCoroBain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Client 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Client 2"
                        });
                });

            modelBuilder.Entity("AtmCoroBain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int?>("WithDrawReferenceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("WithDrawReferenceId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Amount = 100m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 1,
                            Amount = -50m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            Amount = -100m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Amount = 100m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 2,
                            WithDrawReferenceId = 3
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 2,
                            Amount = 300m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 2,
                            Amount = -150m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 4,
                            Amount = -200m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 2,
                            Amount = 200m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 2,
                            WithDrawReferenceId = 7
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 3,
                            Amount = 500m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 3,
                            Amount = -450m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 2,
                            Amount = -100m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 3,
                            Amount = 100m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 2,
                            WithDrawReferenceId = 11
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 4,
                            Amount = 300m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 4,
                            Amount = -250m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 1,
                            Amount = -200m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 4,
                            Amount = 200m,
                            TransactionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionType = 2,
                            WithDrawReferenceId = 15
                        });
                });

            modelBuilder.Entity("AtmCoroBain.Models.Account", b =>
                {
                    b.HasOne("AtmCoroBain.Models.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AtmCoroBain.Models.Transaction", b =>
                {
                    b.HasOne("AtmCoroBain.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtmCoroBain.Models.Transaction", "WithDrawReference")
                        .WithMany()
                        .HasForeignKey("WithDrawReferenceId");

                    b.Navigation("Account");

                    b.Navigation("WithDrawReference");
                });

            modelBuilder.Entity("AtmCoroBain.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AtmCoroBain.Models.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
